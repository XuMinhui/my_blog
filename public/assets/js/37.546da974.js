(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{612:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[t._v("个人觉得渡一教育在前端培训方面的很不错，虽然没有报渡一的前端培训班，但是刚学习前端时都是通过渡一的免费课程入门的，几个老师讲课都很好，特别是成哥曾是我一度偶像（当然现在也是，只不过后面的课没看渡一课程在学，关注少了点），本篇笔记便是当初学习JS基础时所记录，上线方便自己查看")]),t._v(" "),a("p",[t._v("讲课教师：渡一教育-姬成\t现任渡一信息开发有限公司 CEO，原阿里巴巴 UC 移动事业群购物搜索项目负责人")]),t._v(" "),a("p",[t._v("视频链接：https://ke.qq.com/course/231577?taid=2841395744442521")])]),t._v(" "),a("h2",{attrs:{id:"_1-基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本数据类型"}},[t._v("#")]),t._v(" 1. 基本数据类型")]),t._v(" "),a("h4",{attrs:{id:"_1-1-原始值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-原始值"}},[t._v("#")]),t._v(" 1-1 原始值")]),t._v(" "),a("ol",[a("li",[t._v("number\t数值类型")]),t._v(" "),a("li",[t._v("string    字符串类型")]),t._v(" "),a("li",[t._v("boolean    布尔类型")]),t._v(" "),a("li",[t._v("undefind    未定义")]),t._v(" "),a("li",[t._v("null    空类型")])]),t._v(" "),a("h4",{attrs:{id:"_1-2-引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-引用类型"}},[t._v("#")]),t._v(" 1-2 引用类型")]),t._v(" "),a("ol",[a("li",[t._v("array    数组")]),t._v(" "),a("li",[t._v("object    对象")]),t._v(" "),a("li",[t._v("function    函数")]),t._v(" "),a("li",[t._v("data    数据")]),t._v(" "),a("li",[t._v("regExp    正则表达式")])]),t._v(" "),a("h4",{attrs:{id:"_1-3-原始值与引用值得区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-原始值与引用值得区别"}},[t._v("#")]),t._v(" 1-3 原始值与引用值得区别")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("原始值")]),t._v("存在于"),a("strong",[t._v("栈内存")]),t._v("，存放的是直接拷贝的数据")]),t._v(" "),a("li",[a("strong",[t._v("引用值")]),t._v("存在与"),a("strong",[t._v("堆内存")]),t._v("，存放的是引用的内存地址")])]),t._v(" "),a("h4",{attrs:{id:"_1-4-错误类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-错误类型"}},[t._v("#")]),t._v(" 1-4 错误类型")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("低级错误")]),t._v("：语法解析错误（一句也不会执行）")]),t._v(" "),a("li",[a("strong",[t._v("逻辑错误")]),t._v("：标准错误，情有可原（影响当前代码块执行）")])]),t._v(" "),a("h2",{attrs:{id:"_2-逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑运算符"}},[t._v("#")]),t._v(" 2. 逻辑运算符")]),t._v(" "),a("h4",{attrs:{id:"_2-1-运算符表示并且"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-运算符表示并且"}},[t._v("#")]),t._v(" 2-1 '&&'运算符表示并且")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("布尔值判断口诀")]),t._v(" "),a("ul",[a("li",[t._v("全真才为真，有一个假即为假")])])]),t._v(" "),a("li",[a("strong",[t._v("返回原理")]),t._v(" "),a("ul",[a("li",[t._v('先看"&&"所连接得到第一个表达式，如果为真，则返回 第二个表达式的结果；如果为假，则返回第一个表达式的结果')])])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出'false'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出'true'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[a("p",[a("strong",[t._v("应用场景")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("常规使用，接收返回值，或者当做逻辑判断式")])]),t._v(" "),a("li",[a("p",[t._v("开发常用，当做短路语句")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用：保证data的存在情况下输出")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-2-或运算符表示或者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-或运算符表示或者"}},[t._v("#")]),t._v(" 2-2 '||'或运算符表示或者")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("布尔值判断口诀")])]),t._v(" "),a("ul",[a("li",[t._v("全假才为假，有一个真即为真")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("返回值原理")])]),t._v(" "),a("ul",[a("li",[t._v("先看'||'所连接的第一个表达式，如果是假，则返回第二个表达式的j结果；如果为真，则返回第一个表达式的结果。跟“&&”的原理相反")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("应用场景")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("常规使用，接收返回值，或当做逻辑判断表达式")])]),t._v(" "),a("li",[a("p",[t._v("开发常用，兼容性")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用：使代码在不同内核的浏览器中能够兼容。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("h4",{attrs:{id:"_2-3-非运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-非运算符"}},[t._v("#")]),t._v(" 2-3 '!'非运算符")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("返回原理：")]),t._v(" "),a("ul",[a("li",[t._v("返回的布尔值，再取反，返回的结果为布尔值")])])])]),t._v(" "),a("h4",{attrs:{id:"_2-4-补充及-位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-补充及-位运算"}},[t._v("#")]),t._v(" 2-4 补充及'&''|'位运算")]),t._v(" "),a("ul",[a("li",[t._v("**注意：**2-1、2-2 讨论的是两个表达式连接的情况，如有多个表达式，类似方法推理")]),t._v(" "),a("li",[t._v("**位运算'&'：**将其转化为二进制，逐位比较，相等为0，不等为1")]),t._v(" "),a("li",[t._v("**位运算'|'：**将其转化为二进制，逐位比较，相等为1，不等为0，与上一条相反")])]),t._v(" "),a("h4",{attrs:{id:"_2-5-typeof操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-typeof操作符"}},[t._v("#")]),t._v(" 2-5 typeof操作符")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("用法格式：")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("（a）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用：得到a的基本数据类型，结果返回为string类型")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[a("p",[a("strong",[t._v("返回值的6种数据类型：")])]),t._v(" "),a("ul",[a("li",[t._v("number\t\t数字类型\t\t\t特殊：NaN")]),t._v(" "),a("li",[t._v("string\t\t字符串类型")]),t._v(" "),a("li",[t._v("boolean\t\t布尔类型")]),t._v(" "),a("li",[t._v("undefind\t\tundefind类型")]),t._v(" "),a("li",[t._v("object\t\t对象类型\t\t\t特殊：{ }、[ ]、null（null为历史遗留性问题）")]),t._v(" "),a("li",[t._v("function\t\t函数类型")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果是：number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果是：string")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a为未定义变量--》》结果是：undefind")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a为未定义变量--》》结果是：string")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-类型转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-类型转化"}},[t._v("#")]),t._v(" 3. 类型转化")]),t._v(" "),a("h4",{attrs:{id:"_3-1-隐式类型转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-隐式类型转化"}},[t._v("#")]),t._v(" 3-1 隐式类型转化")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("number( mix )")])]),t._v(" "),a("p",[t._v("将目标转化为数字类型，转化不了的为非数NaN")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("parseInt( string，radix )；")])]),t._v(" "),a("p",[t._v("①、用法一：将目标转化为整数类型，直接去掉小数点后的数")]),t._v(" "),a("p",[t._v("②、用法二：砍断原则，获取开头的数字\t100px--》》100")]),t._v(" "),a("p",[t._v("③、用法三：转化进制\t以目标进制为基底，转化为10进制")]),t._v(" "),a("p",[t._v("如：parseInt（1a，16）;--》》将16进制数1a转化为10进制的数--》》结果是：26")]),t._v(" "),a("p",[t._v("注意：radio的取值范围为2-32")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("parsefloat( string );")])]),t._v(" "),a("p",[t._v("砍断原则，获取开头的带小数的数字\t100.2px--》》100.2")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("string( mix );")])]),t._v(" "),a("p",[t._v("将目标转化为字符串类型，所有的都能被转化")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("mix.to string( radio )；")])]),t._v(" "),a("p",[t._v("①、用法一：将目标转化为字符串类型，null不能使用此方法")]),t._v(" "),a("p",[t._v("②、用法二：转换进制\t以十进制为基底，转化为目标进制")]),t._v(" "),a("p",[t._v("如："),a("strong",[t._v("var num =  8;")])]),t._v(" "),a("p",[t._v("**alert（num.to string（2））;\t//**radio的取值范围为2-32")]),t._v(" "),a("p",[t._v("将十进制数8转化为二级制数")]),t._v(" "),a("p",[t._v("结果是：1000")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("mix.to fixed（n）；")])]),t._v(" "),a("p",[t._v("将mix保留小数点后n位小数，四舍五入原则")]),t._v(" "),a("p",[t._v("例如：123.456.to fixed（2）；--》》结果是：123.46")])])]),t._v(" "),a("h4",{attrs:{id:"_3-2-隐式类型转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-隐式类型转化"}},[t._v("#")]),t._v(" 3-2 隐式类型转化")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("isNaN（mix）；--》》隐参照：number（）方法")])]),t._v(" "),a("p",[t._v("将mix经过number()方法后的结果与NaN进行比对，是则返回true，不是则返回flase")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("++/--\t\t=/-（一元正负）--》》隐参照：number（）方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("+ （加）--》》隐参照：string()方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("-  *  /  % --》》隐参照：number（）方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("&&  ||  ！--》》隐参照：boolean（）方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("<  >  <=  >=  --》》隐参照：number（）方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("==  !=  --》》隐参照：number（）方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("===  !==    绝对运算符不发生类型转换")])])])]),t._v(" "),a("p",[t._v("注意：NaN == NaN  （非数自己不等于自己）")]),t._v(" "),a("h2",{attrs:{id:"_4-形参和实参列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-形参和实参列表"}},[t._v("#")]),t._v(" 4. 形参和实参列表")]),t._v(" "),a("h4",{attrs:{id:"_4-1-实参列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-实参列表"}},[t._v("#")]),t._v(" 4-1 实参列表")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("定义：")]),t._v(" "),a("ul",[a("li",[t._v("在每个函数中都有名为"),a("code",[t._v("arguments")]),t._v("的类数组用于存取实参，"),a("code",[t._v("arguments[ ]")]),t._v(" 即被称为"),a("strong",[t._v("实参列表")])])])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于在此处建立了实参列表  arguments{1,2}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"_4-2-形参与实参列表的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-形参与实参列表的关系"}},[t._v("#")]),t._v(" 4-2 形参与实参列表的关系")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1. 形参与arguments并不是同一个地址，而是通过映射规则所建立了映射关系\n2. 形参与arguments并不是同一个地址，而是通过映射规则所建立了映射关系\n3. 只有arguments与形参位置上对应上的参数才回建立映射关系，只有建立了映射关系的参数才适用于映射规则\n")])])]),a("h2",{attrs:{id:"_5-预编译及预编译前奏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-预编译及预编译前奏"}},[t._v("#")]),t._v(" 5. 预编译及预编译前奏")]),t._v(" "),a("h4",{attrs:{id:"_5-1-浏览器解析页面代码："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-浏览器解析页面代码："}},[t._v("#")]),t._v(" 5-1 "),a("strong",[t._v("浏览器解析页面代码：")])]),t._v(" "),a("ol",[a("li",[t._v("**语法解析：**将代码通篇扫描一遍，看看是否出现低级语法错误或者拼写错误、漏写等情况")]),t._v(" "),a("li",[a("strong",[t._v("预编译：")]),t._v("（具体看详解）")]),t._v(" "),a("li",[t._v("**解释执行：**解释一行代码，执行一行代码")])]),t._v(" "),a("h4",{attrs:{id:"_5-2-浏览器预编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-浏览器预编译"}},[t._v("#")]),t._v(" 5-2 浏览器预编译")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("口诀")])]),t._v(" "),a("ul",[a("li",[t._v("函数声明整体提升")]),t._v(" "),a("li",[t._v("变量的声明提升")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("预编译前奏：")])]),t._v(" "),a("ol",[a("li",[t._v("**imply global  ：**暗示全局变量，即任何变量，如果变量未经声明和赋值，此变量就为全局变量所有")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("预编译四部曲：（全局函数只需①④两部曲）")])]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("创建AO对象（Activation Object  执行期上下文）")])]),t._v(" "),a("p",[a("em",[t._v("全局函数为GO对象 （Global Object\t全局执行期上下文）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("寻找形参和变量声明，将形参名和变量名作为AO属性名，值默认为undefined")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("、将实参值和形参统一并赋予AO对应属性")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("在函数体里面找函数声明，将整个函数体作为值赋予AO对应属性")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("声明提升的过程，将无视任何语句，如if、for、while、which等都不会影响声明提升")])]),t._v(" "),a("li",[a("p",[t._v("if 语句里面"),a("strong",[t._v("不允许定义新的函数体")]),t._v(" 如 function  a(){  ...   }")])]),t._v(" "),a("li",[a("p",[t._v("注意区别"),a("strong",[t._v("函数声明")]),t._v("和"),a("strong",[t._v("函数表达式")])]),t._v(" "),a("p",[t._v("eg: function a(){   \t}  ==》》此为函数声明")]),t._v(" "),a("p",[t._v("eg：var  a = function（）{\t}\t==》》此为函数表达式")])])])])]),t._v(" "),a("h2",{attrs:{id:"_6-闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-闭包"}},[t._v("#")]),t._v(" 6. 闭包")]),t._v(" "),a("h4",{attrs:{id:"_6-1-闭包的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-闭包的概念"}},[t._v("#")]),t._v(" 6-1 闭包的概念")]),t._v(" "),a("ul",[a("li",[t._v("内部函数保存到了外面，必定会产生闭包。闭包会导致原有的作用域链不释放，造成内存泄漏。")])]),t._v(" "),a("h4",{attrs:{id:"_6-2-闭包的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-闭包的作用"}},[t._v("#")]),t._v(" 6-2 "),a("strong",[t._v("闭包的作用")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("实现公有变量")]),t._v(" "),a("ul",[a("li",[t._v("函数累加器，如计算网站的访客量")])])]),t._v(" "),a("li",[a("strong",[t._v("可以做缓存（存储结构）")]),t._v(" "),a("ul",[a("li",[t._v("eater ( )")])])]),t._v(" "),a("li",[a("strong",[t._v("可以实现封装，属性私有化")]),t._v(" "),a("ul",[a("li",[t._v("构造函数")])])]),t._v(" "),a("li",[a("strong",[t._v("模块化开发，防止污染全局变量")]),t._v(" "),a("ul",[a("li",[t._v("onclik绑定事件会产生闭包")])])])]),t._v(" "),a("h4",{attrs:{id:"_6-3-命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-命名空间"}},[t._v("#")]),t._v(" 6-3 命名空间")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("命名空间的定义")])]),t._v(" "),a("p",[t._v("命名空间是闭包的一个巧用，，作用是管理变量，防止污染全局变量，适用于模块化开发")])]),t._v(" "),a("li",[a("p",[t._v("命名空间运用")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  yitian  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量的引用，起到缩短代码的作用")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("yitian")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("345")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 私有化变量")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_7-包装类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-包装类"}},[t._v("#")]),t._v(" 7. 包装类")]),t._v(" "),a("h4",{attrs:{id:"_7-2-包装类的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-包装类的概念"}},[t._v("#")]),t._v(" 7-2 包装类的概念")]),t._v(" "),a("ul",[a("li",[t._v("为了便于操作基本类型值，ECMAScript 提供了 3 个特殊的引用类型：Boolean、Number和 String。这些类型与其他引用类型相似，但同时也具有与各自的基本类型相应的特殊行为。实际上，每当读取一个基本类型值的时候，后台就会创建一个对应的基本包装类型的对象，从而能够调用一些方法来操作这些数据。")])]),t._v(" "),a("h4",{attrs:{id:"_7-3-原始值与原始值对象的区别："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-原始值与原始值对象的区别："}},[t._v("#")]),t._v(" 7-3 "),a("strong",[t._v("原始值与原始值对象的区别：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("**原始值：**只能参与运算，原始值操作不了属性和方法，通过new关键词创建为原始值对象")])]),t._v(" "),a("li",[a("p",[t._v("**原始值对象：**能定义变量和方法等，参与运算之后即转化为原始值")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("典型eg：")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" box "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mr. Lee'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义一个字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串为string类型，其为原始值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" box2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//截掉字符串前两位")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// box能使用方法的原理是：隐式创建了一个new String（Mr.Lee）的原始值对象，调用了其的substring方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此语句的最后会将创建的对象delete销毁掉，如不保存出来，此举将无意义")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("box2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出新字符串")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"_8-原型prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-原型prototype"}},[t._v("#")]),t._v(" 8. 原型prototype")]),t._v(" "),a("h4",{attrs:{id:"_8-1-原型的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-原型的定义"}},[t._v("#")]),t._v(" 8-1 原型的定义")]),t._v(" "),a("ul",[a("li",[t._v("原型是 function 对象的一个性质，它定义了构造函数制造出的对象的公共祖先，通过该构造函数产生的 对象，可以继承该原型的属性和方法，原型也是对象。")])]),t._v(" "),a("h4",{attrs:{id:"_8-2-原型的特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-原型的特性"}},[t._v("#")]),t._v(" 8-2 原型的特性")]),t._v(" "),a("ol",[a("li",[t._v("利用原型的特点和概念，可以提取共有属性")]),t._v(" "),a("li",[t._v("对象可以通过查看隐式属性 “"),a("strong",[t._v("proto")]),t._v("” 来查看原型")]),t._v(" "),a("li",[t._v("对象可以通过 “constructor方法” 来查看构造函数")])]),t._v(" "),a("h4",{attrs:{id:"_8-3-原型链-propt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-原型链-propt"}},[t._v("#")]),t._v(" 8-3 原型链__propt _")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("规律：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("绝大多数对象的最终都会继承自object.prototype")]),t._v(" "),a("p",[t._v("即object.prototype是对大多数对象的公有祖先")])]),t._v(" "),a("li",[a("p",[t._v("仅有一种情况例外：")]),t._v(" "),a("p",[t._v("object.create ( null );")]),t._v(" "),a("p",[t._v("create方法的括号里（）必须填原型或者null")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("扩展")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用object.create（原型）方法构造对象")]),t._v(" "),a("p",[t._v("eg : \tvar  obj =  object.create(xxx.prototype)")])]),t._v(" "),a("li",[a("p",[t._v("document.write 隐式调用对象的  toString （ ）方法")])])])])]),t._v(" "),a("h4",{attrs:{id:"_8-4-改变this指向：call-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-改变this指向：call-apply"}},[t._v("#")]),t._v(" 8-4 改变this指向：call/apply")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("**call：**需要把实参按照形参的个数传进去")])]),t._v(" "),a("li",[a("p",[t._v("**apply：**需要传一个arguments 数组")])]),t._v(" "),a("li",[a("p",[t._v("**相同点：**作用都是改变this指向")]),t._v(" "),a("p",[t._v("**不同点：**传参列表不同")])])]),t._v(" "),a("h4",{attrs:{id:"_8-5-继承模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-继承模式"}},[t._v("#")]),t._v(" 8-5 继承模式")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("继承的发展史")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("传统形式")]),t._v("\t\t原型链")]),t._v(" "),a("ul",[a("li",[t._v("过多继承了没用的属性")]),t._v(" "),a("li",[t._v('eg：son.prototype.lastName = "Xu"')])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("借用构造函数")])]),t._v(" "),a("ul",[a("li",[t._v("不能继承构造函数的原型")]),t._v(" "),a("li",[t._v("每次每次构造一个函数都需要多走一个函数，即视觉上节省代码，运行上更耗性能")]),t._v(" "),a("li",[t._v("eg：son.call ( this, lastName, sex)")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("共享原型")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("不能随便改动自己的原型")]),t._v(" "),a("li",[t._v("eg：son.prototype = father.prototype;")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("圣杯模式")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("p",[t._v("目前开发常用的方法")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("intherit")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//intherir(A,B)实现A继承B的属性")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义一个中间函数F作为嫁接")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Target "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//形参Target继承Origin")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此两行代码实现函数的继承")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constuctor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修正将函数的构造原型")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将其继承的父级原型保\t\t\t\t\t\t   存，以备后用\t")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])])])])])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);